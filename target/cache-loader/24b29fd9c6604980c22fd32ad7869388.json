{"remainingRequest":"/var/www/html/JHipster/node_modules/thread-loader/dist/cjs.js??ref--9-2!/var/www/html/JHipster/node_modules/ts-loader/index.js??ref--9-3!/var/www/html/JHipster/node_modules/eslint-loader/dist/cjs.js!/var/www/html/JHipster/src/main/webapp/app/shared/alert/alert-error.component.ts","dependencies":[{"path":"/var/www/html/JHipster/src/main/webapp/app/shared/alert/alert-error.component.ts","mtime":1570651889812},{"path":"/var/www/html/JHipster/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/var/www/html/JHipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/JHipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/JHipster/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/var/www/html/JHipster/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYSwgX2IsIF9jOwppbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJzsKaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnOwppbXBvcnQgeyBKaGlFdmVudE1hbmFnZXIsIEpoaUFsZXJ0U2VydmljZSB9IGZyb20gJ25nLWpoaXBzdGVyJzsKbGV0IEpoaUFsZXJ0RXJyb3JDb21wb25lbnQgPSBjbGFzcyBKaGlBbGVydEVycm9yQ29tcG9uZW50IHsKICAgIGNvbnN0cnVjdG9yKGFsZXJ0U2VydmljZSwgZXZlbnRNYW5hZ2VyLCB0cmFuc2xhdGVTZXJ2aWNlKSB7CiAgICAgICAgdGhpcy5hbGVydFNlcnZpY2UgPSBhbGVydFNlcnZpY2U7CiAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIgPSBldmVudE1hbmFnZXI7CiAgICAgICAgdGhpcy50cmFuc2xhdGVTZXJ2aWNlID0gdHJhbnNsYXRlU2VydmljZTsKICAgICAgICB0aGlzLmFsZXJ0cyA9IFtdOwogICAgICAgIHRoaXMuY2xlYW5IdHRwRXJyb3JMaXN0ZW5lciA9IGV2ZW50TWFuYWdlci5zdWJzY3JpYmUoJ2pIaXBzdGVyQXBwLmh0dHBFcnJvcicsIHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgbGV0IGk7CiAgICAgICAgICAgIGNvbnN0IGh0dHBFcnJvclJlc3BvbnNlID0gcmVzcG9uc2UuY29udGVudDsKICAgICAgICAgICAgc3dpdGNoIChodHRwRXJyb3JSZXNwb25zZS5zdGF0dXMpIHsKICAgICAgICAgICAgICAgIC8vIGNvbm5lY3Rpb24gcmVmdXNlZCwgc2VydmVyIG5vdCByZWFjaGFibGUKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEVycm9yQWxlcnQoJ1NlcnZlciBub3QgcmVhY2hhYmxlJywgJ2Vycm9yLnNlcnZlci5ub3QucmVhY2hhYmxlJyk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIDQwMDogewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGFyciA9IGh0dHBFcnJvclJlc3BvbnNlLmhlYWRlcnMua2V5cygpOwogICAgICAgICAgICAgICAgICAgIGxldCBlcnJvckhlYWRlciA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgbGV0IGVudGl0eUtleSA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgYXJyLmZvckVhY2goZW50cnkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoZW50cnkudG9Mb3dlckNhc2UoKS5lbmRzV2l0aCgnYXBwLWVycm9yJykpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVycm9ySGVhZGVyID0gaHR0cEVycm9yUmVzcG9uc2UuaGVhZGVycy5nZXQoZW50cnkpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGVudHJ5LnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgoJ2FwcC1wYXJhbXMnKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5S2V5ID0gaHR0cEVycm9yUmVzcG9uc2UuaGVhZGVycy5nZXQoZW50cnkpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9ySGVhZGVyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGVudGl0eU5hbWUgPSB0cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoJ2dsb2JhbC5tZW51LmVudGl0aWVzLicgKyBlbnRpdHlLZXkpOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEVycm9yQWxlcnQoZXJyb3JIZWFkZXIsIGVycm9ySGVhZGVyLCB7IGVudGl0eU5hbWUgfSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGh0dHBFcnJvclJlc3BvbnNlLmVycm9yICE9PSAnJyAmJiBodHRwRXJyb3JSZXNwb25zZS5lcnJvci5maWVsZEVycm9ycykgewogICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZEVycm9ycyA9IGh0dHBFcnJvclJlc3BvbnNlLmVycm9yLmZpZWxkRXJyb3JzOwogICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZmllbGRFcnJvcnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkRXJyb3IgPSBmaWVsZEVycm9yc1tpXTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChbJ01pbicsICdNYXgnLCAnRGVjaW1hbE1pbicsICdEZWNpbWFsTWF4J10uaW5jbHVkZXMoZmllbGRFcnJvci5tZXNzYWdlKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkRXJyb3IubWVzc2FnZSA9ICdTaXplJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnZlcnQgJ3NvbWV0aGluZ1sxNF0ub3RoZXJbNF0uaWQnIHRvICdzb21ldGhpbmdbXS5vdGhlcltdLmlkJyBzbyB0cmFuc2xhdGlvbnMgY2FuIGJlIHdyaXR0ZW4gdG8gaXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbnZlcnRlZEZpZWxkID0gZmllbGRFcnJvci5maWVsZC5yZXBsYWNlKC9cW1xkKlxdL2csICdbXScpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGROYW1lID0gdHJhbnNsYXRlU2VydmljZS5pbnN0YW50KCdqSGlwc3RlckFwcC4nICsgZmllbGRFcnJvci5vYmplY3ROYW1lICsgJy4nICsgY29udmVydGVkRmllbGQpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFcnJvckFsZXJ0KCdFcnJvciBvbiBmaWVsZCAiJyArIGZpZWxkTmFtZSArICciJywgJ2Vycm9yLicgKyBmaWVsZEVycm9yLm1lc3NhZ2UsIHsgZmllbGROYW1lIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGh0dHBFcnJvclJlc3BvbnNlLmVycm9yICE9PSAnJyAmJiBodHRwRXJyb3JSZXNwb25zZS5lcnJvci5tZXNzYWdlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkRXJyb3JBbGVydChodHRwRXJyb3JSZXNwb25zZS5lcnJvci5tZXNzYWdlLCBodHRwRXJyb3JSZXNwb25zZS5lcnJvci5tZXNzYWdlLCBodHRwRXJyb3JSZXNwb25zZS5lcnJvci5wYXJhbXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRFcnJvckFsZXJ0KGh0dHBFcnJvclJlc3BvbnNlLmVycm9yKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjYXNlIDQwNDoKICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEVycm9yQWxlcnQoJ05vdCBmb3VuZCcsICdlcnJvci51cmwubm90LmZvdW5kJyk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgICAgIGlmIChodHRwRXJyb3JSZXNwb25zZS5lcnJvciAhPT0gJycgJiYgaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IubWVzc2FnZSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEVycm9yQWxlcnQoaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IubWVzc2FnZSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZEVycm9yQWxlcnQoaHR0cEVycm9yUmVzcG9uc2UuZXJyb3IpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQogICAgc2V0Q2xhc3NlcyhhbGVydCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICdqaGktdG9hc3QnOiBhbGVydC50b2FzdCwKICAgICAgICAgICAgW2FsZXJ0LnBvc2l0aW9uXTogdHJ1ZQogICAgICAgIH07CiAgICB9CiAgICBuZ09uRGVzdHJveSgpIHsKICAgICAgICBpZiAodGhpcy5jbGVhbkh0dHBFcnJvckxpc3RlbmVyICE9PSB1bmRlZmluZWQgJiYgdGhpcy5jbGVhbkh0dHBFcnJvckxpc3RlbmVyICE9PSBudWxsKSB7CiAgICAgICAgICAgIHRoaXMuZXZlbnRNYW5hZ2VyLmRlc3Ryb3kodGhpcy5jbGVhbkh0dHBFcnJvckxpc3RlbmVyKTsKICAgICAgICAgICAgdGhpcy5hbGVydHMgPSBbXTsKICAgICAgICB9CiAgICB9CiAgICBhZGRFcnJvckFsZXJ0KG1lc3NhZ2UsIGtleSwgZGF0YSkgewogICAgICAgIG1lc3NhZ2UgPSBrZXkgJiYga2V5ICE9PSBudWxsID8ga2V5IDogbWVzc2FnZTsKICAgICAgICBjb25zdCBuZXdBbGVydCA9IHsKICAgICAgICAgICAgdHlwZTogJ2RhbmdlcicsCiAgICAgICAgICAgIG1zZzogbWVzc2FnZSwKICAgICAgICAgICAgcGFyYW1zOiBkYXRhLAogICAgICAgICAgICB0aW1lb3V0OiA1MDAwLAogICAgICAgICAgICB0b2FzdDogdGhpcy5hbGVydFNlcnZpY2UuaXNUb2FzdCgpLAogICAgICAgICAgICBzY29wZWQ6IHRydWUKICAgICAgICB9OwogICAgICAgIHRoaXMuYWxlcnRzLnB1c2godGhpcy5hbGVydFNlcnZpY2UuYWRkQWxlcnQobmV3QWxlcnQsIHRoaXMuYWxlcnRzKSk7CiAgICB9Cn07CkpoaUFsZXJ0RXJyb3JDb21wb25lbnQgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgQ29tcG9uZW50KHsKICAgICAgICBzZWxlY3RvcjogJ2poaS1hbGVydC1lcnJvcicsCiAgICAgICAgdGVtcGxhdGU6IGAKICAgIDxkaXYgY2xhc3M9ImFsZXJ0cyIgcm9sZT0iYWxlcnQiPgogICAgICA8ZGl2ICpuZ0Zvcj0ibGV0IGFsZXJ0IG9mIGFsZXJ0cyIgW25nQ2xhc3NdPSJzZXRDbGFzc2VzKGFsZXJ0KSI+CiAgICAgICAgPG5nYi1hbGVydCAqbmdJZj0iYWxlcnQgJiYgYWxlcnQudHlwZSAmJiBhbGVydC5tc2ciIFt0eXBlXT0iYWxlcnQudHlwZSIgKGNsb3NlKT0iYWxlcnQuY2xvc2UoYWxlcnRzKSI+CiAgICAgICAgICA8cHJlIFtpbm5lckhUTUxdPSJhbGVydC5tc2ciPjwvcHJlPgogICAgICAgIDwvbmdiLWFsZXJ0PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIGAKICAgIH0pLAogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIEpoaUFsZXJ0U2VydmljZSAhPT0gInVuZGVmaW5lZCIgJiYgSmhpQWxlcnRTZXJ2aWNlKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0LCB0eXBlb2YgKF9iID0gdHlwZW9mIEpoaUV2ZW50TWFuYWdlciAhPT0gInVuZGVmaW5lZCIgJiYgSmhpRXZlbnRNYW5hZ2VyKSA9PT0gImZ1bmN0aW9uIiA/IF9iIDogT2JqZWN0LCB0eXBlb2YgKF9jID0gdHlwZW9mIFRyYW5zbGF0ZVNlcnZpY2UgIT09ICJ1bmRlZmluZWQiICYmIFRyYW5zbGF0ZVNlcnZpY2UpID09PSAiZnVuY3Rpb24iID8gX2MgOiBPYmplY3RdKQpdLCBKaGlBbGVydEVycm9yQ29tcG9uZW50KTsKZXhwb3J0IHsgSmhpQWxlcnRFcnJvckNvbXBvbmVudCB9Owo="},{"version":3,"file":"/var/www/html/JHipster/src/main/webapp/app/shared/alert/alert-error.component.ts","sourceRoot":"","sources":["/var/www/html/JHipster/node_modules/eslint-loader/dist/cjs.js!/var/www/html/JHipster/src/main/webapp/app/shared/alert/alert-error.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { JhiEventManager, JhiAlert, JhiAlertService } from 'ng-jhipster';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'jhi-alert-error',\n  template: `\n    <div class=\"alerts\" role=\"alert\">\n      <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\n        <ngb-alert *ngIf=\"alert && alert.type && alert.msg\" [type]=\"alert.type\" (close)=\"alert.close(alerts)\">\n          <pre [innerHTML]=\"alert.msg\"></pre>\n        </ngb-alert>\n      </div>\n    </div>\n  `\n})\nexport class JhiAlertErrorComponent implements OnDestroy {\n  alerts: any[];\n  cleanHttpErrorListener: Subscription;\n  constructor(private alertService: JhiAlertService, private eventManager: JhiEventManager, private translateService: TranslateService) {\n    this.alerts = [];\n\n    this.cleanHttpErrorListener = eventManager.subscribe('jHipsterApp.httpError', response => {\n      let i;\n      const httpErrorResponse = response.content;\n      switch (httpErrorResponse.status) {\n        // connection refused, server not reachable\n        case 0:\n          this.addErrorAlert('Server not reachable', 'error.server.not.reachable');\n          break;\n\n        case 400: {\n          const arr = httpErrorResponse.headers.keys();\n          let errorHeader = null;\n          let entityKey = null;\n          arr.forEach(entry => {\n            if (entry.toLowerCase().endsWith('app-error')) {\n              errorHeader = httpErrorResponse.headers.get(entry);\n            } else if (entry.toLowerCase().endsWith('app-params')) {\n              entityKey = httpErrorResponse.headers.get(entry);\n            }\n          });\n          if (errorHeader) {\n            const entityName = translateService.instant('global.menu.entities.' + entityKey);\n            this.addErrorAlert(errorHeader, errorHeader, { entityName });\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\n            for (i = 0; i < fieldErrors.length; i++) {\n              const fieldError = fieldErrors[i];\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\n                fieldError.message = 'Size';\n              }\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\n              const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\n              const fieldName = translateService.instant('jHipsterApp.' + fieldError.objectName + '.' + convertedField);\n              this.addErrorAlert('Error on field \"' + fieldName + '\"', 'error.' + fieldError.message, { fieldName });\n            }\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message, httpErrorResponse.error.message, httpErrorResponse.error.params);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n          break;\n        }\n        case 404:\n          this.addErrorAlert('Not found', 'error.url.not.found');\n          break;\n\n        default:\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\n            this.addErrorAlert(httpErrorResponse.error.message);\n          } else {\n            this.addErrorAlert(httpErrorResponse.error);\n          }\n      }\n    });\n  }\n\n  setClasses(alert) {\n    return {\n      'jhi-toast': alert.toast,\n      [alert.position]: true\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.cleanHttpErrorListener !== undefined && this.cleanHttpErrorListener !== null) {\n      this.eventManager.destroy(this.cleanHttpErrorListener);\n      this.alerts = [];\n    }\n  }\n\n  addErrorAlert(message, key?, data?) {\n    message = key && key !== null ? key : message;\n\n    const newAlert: JhiAlert = {\n      type: 'danger',\n      msg: message,\n      params: data,\n      timeout: 5000,\n      toast: this.alertService.isToast(),\n      scoped: true\n    };\n\n    this.alerts.push(this.alertService.addAlert(newAlert, this.alerts));\n  }\n}\n"]}]}