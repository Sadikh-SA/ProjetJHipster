{"remainingRequest":"/var/www/html/JHipster/node_modules/thread-loader/dist/cjs.js??ref--9-2!/var/www/html/JHipster/node_modules/ts-loader/index.js??ref--9-3!/var/www/html/JHipster/node_modules/eslint-loader/dist/cjs.js!/var/www/html/JHipster/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","dependencies":[{"path":"/var/www/html/JHipster/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","mtime":1570651888204},{"path":"/var/www/html/JHipster/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/var/www/html/JHipster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/JHipster/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/JHipster/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/var/www/html/JHipster/node_modules/eslint-loader/dist/cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tICJ0c2xpYiI7CnZhciBfYTsKaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnOwppbXBvcnQgeyBKaGlFdmVudE1hbmFnZXIgfSBmcm9tICduZy1qaGlwc3Rlcic7CmltcG9ydCB7IEh0dHBFcnJvclJlc3BvbnNlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnOwppbXBvcnQgeyB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7CmxldCBFcnJvckhhbmRsZXJJbnRlcmNlcHRvciA9IGNsYXNzIEVycm9ySGFuZGxlckludGVyY2VwdG9yIHsKICAgIGNvbnN0cnVjdG9yKGV2ZW50TWFuYWdlcikgewogICAgICAgIHRoaXMuZXZlbnRNYW5hZ2VyID0gZXZlbnRNYW5hZ2VyOwogICAgfQogICAgaW50ZXJjZXB0KHJlcXVlc3QsIG5leHQpIHsKICAgICAgICByZXR1cm4gbmV4dC5oYW5kbGUocmVxdWVzdCkucGlwZSh0YXAoKGV2ZW50KSA9PiB7IH0sIChlcnIpID0+IHsKICAgICAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIEh0dHBFcnJvclJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICBpZiAoIShlcnIuc3RhdHVzID09PSA0MDEgJiYgKGVyci5tZXNzYWdlID09PSAnJyB8fCAoZXJyLnVybCAmJiBlcnIudXJsLmluY2x1ZGVzKCdhcGkvYWNjb3VudCcpKSkpKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudE1hbmFnZXIuYnJvYWRjYXN0KHsgbmFtZTogJ2pIaXBzdGVyQXBwLmh0dHBFcnJvcicsIGNvbnRlbnQ6IGVyciB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0pKTsKICAgIH0KfTsKRXJyb3JIYW5kbGVySW50ZXJjZXB0b3IgPSB0c2xpYl8xLl9fZGVjb3JhdGUoWwogICAgSW5qZWN0YWJsZSgpLAogICAgdHNsaWJfMS5fX21ldGFkYXRhKCJkZXNpZ246cGFyYW10eXBlcyIsIFt0eXBlb2YgKF9hID0gdHlwZW9mIEpoaUV2ZW50TWFuYWdlciAhPT0gInVuZGVmaW5lZCIgJiYgSmhpRXZlbnRNYW5hZ2VyKSA9PT0gImZ1bmN0aW9uIiA/IF9hIDogT2JqZWN0XSkKXSwgRXJyb3JIYW5kbGVySW50ZXJjZXB0b3IpOwpleHBvcnQgeyBFcnJvckhhbmRsZXJJbnRlcmNlcHRvciB9Owo="},{"version":3,"file":"/var/www/html/JHipster/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","sourceRoot":"","sources":["/var/www/html/JHipster/node_modules/eslint-loader/dist/cjs.js!/var/www/html/JHipster/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AAC9C,OAAO,EAAgC,iBAAiB,EAA0B,MAAM,sBAAsB,CAAC;AAE/G,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAGrC,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAClC,YAAoB,YAA6B;QAA7B,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAErD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,GAAG,CACD,CAAC,KAAqB,EAAE,EAAE,GAAE,CAAC,EAC7B,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,GAAG,YAAY,iBAAiB,EAAE;gBACpC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;oBACjG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,uBAAuB,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;iBAC9E;aACF;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;CACF,CAAA;AAjBY,uBAAuB;IADnC,UAAU,EAAE;iEAEuB,eAAe,oBAAf,eAAe;GADtC,uBAAuB,CAiBnC;SAjBY,uBAAuB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JhiEventManager } from 'ng-jhipster';\nimport { HttpInterceptor, HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  constructor(private eventManager: JhiEventManager) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap(\n        (event: HttpEvent<any>) => {},\n        (err: any) => {\n          if (err instanceof HttpErrorResponse) {\n            if (!(err.status === 401 && (err.message === '' || (err.url && err.url.includes('api/account'))))) {\n              this.eventManager.broadcast({ name: 'jHipsterApp.httpError', content: err });\n            }\n          }\n        }\n      )\n    );\n  }\n}\n"]}]}